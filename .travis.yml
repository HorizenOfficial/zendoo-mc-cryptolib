os: linux
dist: focal
language: generic
services:
  - docker

# env variable definitions
# DOCKER_ORG, IMAGE_NAME and IMAGE_TAG will determine which docker image is being used,
# see https://github.com/HorizenOfficial/sc-ci-base-docker#currently-available-tags-only-latest-shown
# for details on available tags.
# TESTS configures which test scripts to run from the ci/tests folder. The format is either comma
# separated substrings, matching on the filename ('001,002' evaluates to 001*.sh and 002*.sh), or '*'
# which evaluates to *.sh (all .sh files).
# CARGOARGS is passed like this 'cargo $CARGOARGS check|test|build' to all cargo commands in the test scripts.
# Additionally at container startup the version of Rust specified by CARGOARGS is also installed
# using rustup should it not yet be installed in the container flavor.
# RUST_CROSS_TARGETS comma separated list of targets to install, will be installed for all toolchains.
# RUSTUP_TOOLCHAIN another way to override the used Rust version, although CARGOARGS takes precedence, see:
# https://rust-lang.github.io/rustup/overrides.html
# RUSTFLAGS global rust compiler flags to set.
# By default empty env vars like RUSTFLAGS='' are not passed through to the docker container,
# if you want to pass empty vars set them to space like RUSTFLAGS=' '.

env:
  global:
    - DOCKER_ORG=zencash
    - IMAGE_NAME=sc-ci-base

before_script: source ci/before_script.sh
script: ci/script.sh

jobs:
  include:
    - name: bionic_rust-1.51.0_latest
      env: IMAGE_TAG=bionic_rust-1.51.0_latest TESTS='*' RUSTFLAGS=' '
    - name: bionic_rust-nightly-2021-04-25_latest
      env: IMAGE_TAG=bionic_rust-nightly-2021-04-25_latest TESTS='*' CARGOARGS='+nightly-2021-04-25' RUSTFLAGS='-C target-feature=+bmi2,+adx --emit=asm'
    - name: focal_rust-1.51.0_latest
      env: IMAGE_TAG=focal_rust-1.51.0_latest TESTS='*' RUSTFLAGS=' '
    - name: focal_rust-nightly-2021-04-25_latest
      env: IMAGE_TAG=focal_rust-nightly-2021-04-25_latest TESTS='*' CARGOARGS='+nightly-2021-04-25' RUSTFLAGS='-C target-feature=+bmi2,+adx --emit=asm'
